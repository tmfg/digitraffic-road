# Default profile for dev is localhost
spring.profiles.active=localhost
spring.main.banner-mode=off
spring.jpa.properties.hibernate.types.print.banner=false
# DPO-1792 fix, TODO: remove when getting rid of springfox
spring.mvc.pathmatch.matching-strategy=ANT_PATH_MATCHER

# Common db config
# See: http://stackoverflow.com/questions/30451470/connection-to-db-dies-after-424-in-spring-boot-jpa-hibernate
#      http://www.tomcatexpert.com/blog/2010/04/01/configuring-jdbc-pool-high-concurrency
spring.jpa.properties.hibernate.jdbc.batch_size=200

# Supressed org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl: HHH000424 stacktrace
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# Default transaction timeout in seconds.
spring.transaction.default-timeout=600
# OSIV is enabled by default. Disable it.
spring.jpa.open-in-view=false

# Use ISO-8601 date format
spring.jackson.serialization.WRITE_DATES_AS_TIMESTAMPS=false
# Skip nanos and use only ms precision
spring.jackson.serialization.WRITE_DATE_TIMESTAMPS_AS_NANOSECONDS=false
# Don't change offset or add zone id when deserializing from json date-time to ZonedDateTime
# Ie. 2020-01-02T14:43:18.388Z -> 2020-01-02T14:43:18.388Z[UTC]
spring.jackson.deserialization.ADJUST_DATES_TO_CONTEXT_TIME_ZONE=false
# Pretty json
spring.jackson.serialization.INDENT_OUTPUT=true

# Limits sensor values collected in weather station web service messages,
# based on measurement time in minutes. Values which are more than specified
# minutes older than latest sensor values for the station, are filtered out.
# 1440 min = 24 h
weatherStation.sensorValueTimeLimitInMinutes=1440

# Limits sensor values collected in tms station web service messages,
# based on measurement time in minutes. Values which are more than specified
# minutes older than latest sensor values for the station, are filtered out.
# 1440 min = 24 h
tmsStation.sensorValueTimeLimitInMinutes=1440

tms.sensorValueAccuracyPercentage.totalAmounts=99.0

# Maintenance jobs, comment out to enable
#maintenance.tracking.job.enabled = false
# 00:05 every day
maintenance.tracking.job.cleanup.cron=0 5 0 * * ?

# Work machine tracking time gap to create new observation
workmachine.tracking.distinct.observation.gap.minutes=5

# Max gap between linestring points to spilt in different realizations
workmachine.tracking.distinct.linestring.observationgap.km=0.5

# Work machine tracking observations handling interval 1 min
maintenance.tracking.job.intervalMs=60000

# https://docs.spring.io/spring-boot/reference/actuator/endpoints.html
management.endpoints.enabled-by-default=false
# Enable /actuator/info and /actuator/health
management.endpoints.web.exposure.include=health,info
management.endpoint.health.enabled=true
management.endpoint.health.show-details=never
management.endpoint.health.show-components=never
management.endpoint.info.enabled=true
management.health.db.enabled=false

info.app.version=@project.version@
info.app.buildtime=@maven.build.timestamp@

# OpenAPI properties https://springdoc.org/#swagger-ui-properties
springdoc.swagger-ui.doc-expansion=none
springdoc.swagger-ui.default-model-rendering=model
springdoc.swagger-ui.default-model-expand-depth=6
springdoc.swagger-ui.tags-sorter=alpha
springdoc.swagger-ui.operations-sorter=alpha

# KCA ActiveMQ Artemis JMS integration
# ArtemisProperties.java Connect to a broker using the native Artemis protocol (i.e. netty).
spring.artemis.mode=native
# How often jms messages are drained from queue
kca.artemis.jms.drainIntervalMs=1000
# With this acknowledgment mode, the client acknowledges a consumed message automatically when returning to caller.
# https://jakarta.ee/specifications/messaging/3.0/apidocs/jakarta/jms/session
spring.jms.listener.session.acknowledge-mode=auto

# How often mqtt sender should check for new sensor values
mqtt.tms.v2.pollingIntervalMs=1000
mqtt.weather.v2.pollingIntervalMs=1000
mqtt.maintenance.tracking.v2.pollingIntervalMs=1000
mqtt.TrafficMessage.v2.pollingIntervalMs=1000

# How often status messages are sent
mqtt.status.intervalMs=30000

# do not add X-Application-Context
management.server.add-application-context-header=false

# Support for etag and conditional HTTP-requests
etags.enabled=true

# settings for camera image transfer
camera-image-uploader.http.connectTimeout=1000
camera-image-uploader.http.readTimeout=10000
camera-image-uploader.imageUpdateTimeout=40000
camera-image-uploader.retry.delay.ms=1000

# S3 settings
dt.amazon.s3.weathercam.history.maxAgeHours=24

# Cache in millis
cache.reverseGeocode.ms=#{86400*1000*7}
cache.maintenance.routes.ms=#{60*1000}
cache.maintenance.routes.size=500
cache.maintenance.routes.latest.ms=#{60*1000}
cache.maintenance.routes.latest.size=500
cache.maintenance.domain.names.ms=#{60*60*24*1000}
cache.free-flow-speeds.ms=#{60*60*24*1000}
cache.free-flow-speeds.size=2000

# Git preferences for traffic messages simple JSON region geometries
dt.traffic-messages.git-repo.url=https://github.com/tmfg/metadata.git
dt.traffic-messages.git-repo.path=geometry/regions

dt.logging.transaction.limit=500

metadata.server.sender.connectionTimeout=120000
metadata.server.sender.readTimeout=120000

dt.scheduled.pool.size=5

logging.level.org.springframework.test=WARN
